# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestText():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_text(self):
    # Test name: text
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("http://app.xunjietupian.com/")
    # 2 | setWindowSize | 1054x808 | 
    self.driver.set_window_size(1054, 808)
    # 3 | mouseOver | css=.raw:nth-child(1) > a:nth-child(3) h3 | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".raw:nth-child(1) > a:nth-child(3) h3")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 4 | mouseOut | css=.raw:nth-child(1) > a:nth-child(3) h3 | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 5 | click | css=.raw:nth-child(1) > a:nth-child(3) img | 
    self.driver.find_element(By.CSS_SELECTOR, ".raw:nth-child(1) > a:nth-child(3) img").click()
    # 6 | click | css=.btn-first-load | 
    # self.driver.find_element(By.CSS_SELECTOR, ".btn-first-load").click()
    # 7 | type | css=.tui-image-editor-load-btn | /
    # self.driver.find_element(By.CSS_SELECTOR, ".tui-image-editor-load-btn").send_keys("/")
    upload = self.driver.find_element(By.CSS_SELECTOR, ".tui-image-editor-load-btn")
    time.sleep(1)
    upload.send_keys("E:/code/PycharmProjects/Test2/img/test.jpg")
    time.sleep(1)
    # 8 | click | css=.upper-canvas | 
    self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 9 | click | css=.upper-canvas | 
    # self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 10 | click | css=.upper-canvas | 
    # self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 11 | doubleClick | css=.upper-canvas | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    # 12 | type | css=.tui-image-eidtor-textarea | Hello world
    self.driver.find_element(By.CSS_SELECTOR, ".tui-image-eidtor-textarea").send_keys("Hello world")
    # 13 | click | css=.page-edit > .ct | 
    self.driver.find_element(By.CSS_SELECTOR, ".page-edit > .ct").click()
    # 14 | click | css=.btn-basic-undo > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-basic-undo > img").click()
    # 15 | click | css=.btn-basic-redo > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-basic-redo > img").click()
    # 16 | click | css=.btn-basic-delete > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-basic-delete > img").click()
    # 17 | click | css=.upper-canvas | 
    self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 18 | click | css=.btn-basic-delete > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-basic-delete > img").click()
    # 19 | click | css=.btn-basic-undo > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-basic-undo > img").click()
    # 20 | click | css=.btn-basic-reset > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-basic-reset > img").click()
    # 21 | click | css=.btn-basic-undo > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-basic-undo > img").click()
    # 22 | click | css=.color-picker-text > .fl:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".color-picker-text > .fl:nth-child(1)").click()
    # 23 | type | css=.range-text-size | 136
    self.driver.find_element(By.CSS_SELECTOR, ".range-text-size").send_keys("136")
    # 24 | click | css=.range-text-size | 
    self.driver.find_element(By.CSS_SELECTOR, ".range-text-size").click()
    # 25 | click | css=.upper-canvas | 
    self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 26 | click | css=.upper-canvas | 
    # self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 27 | click | css=.upper-canvas | 
    # self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 28 | click | css=.upper-canvas | 
    # self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 29 | click | css=.upper-canvas | 
    # self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 30 | doubleClick | css=.upper-canvas | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    # 31 | type | css=.tui-image-eidtor-textarea | Test
    self.driver.find_element(By.CSS_SELECTOR, ".tui-image-eidtor-textarea").send_keys("Test")
    # 32 | click | css=.page-edit > .ct | 
    self.driver.find_element(By.CSS_SELECTOR, ".page-edit > .ct").click()
    # 33 | click | css=.btn-down-load | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-down-load").click()
    time.sleep(2)
    # 34 | close |  | 
    self.driver.close()
  
