# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestShape():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_shape(self):
    # Test name: shape
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("http://app.xunjietupian.com/")
    # 2 | setWindowSize | 1552x840 | 
    self.driver.set_window_size(1552, 840)
    # 3 | click | css=.raw:nth-child(1) > a:nth-child(5) img | 
    self.driver.find_element(By.CSS_SELECTOR, ".raw:nth-child(1) > a:nth-child(5) img").click()
    # 4 | click | css=.btn-first-load | 
    # self.driver.find_element(By.CSS_SELECTOR, ".btn-first-load").click()
    # 5 | type | css=.tui-image-editor-load-btn | /
    # self.driver.find_element(By.CSS_SELECTOR, ".tui-image-editor-load-btn").send_keys("/")
    upload = self.driver.find_element(By.CSS_SELECTOR, ".tui-image-editor-load-btn")
    time.sleep(1)
    upload.send_keys("E:/code/PycharmProjects/Test2/img/test.jpg")
    time.sleep(1)
    # 6 | click | css=.btn-shape:nth-child(1) > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-shape:nth-child(1) > img").click()
    # 7 | mouseDownAt | css=.upper-canvas | 275.3999938964844,189.39999389648438
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).move_by_offset(-200,-200).click_and_hold().move_by_offset(-100,-100).perform()
    # 8 | mouseMoveAt | css=.upper-canvas | 275.3999938964844,189.39999389648438
    # element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    # actions = ActionChains(self.driver)
    # actions.move_to_element(element).perform()
    # 9 | mouseUpAt | css=.upper-canvas | 275.3999938964844,189.39999389648438
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.release().perform()
    # 10 | click | css=.upper-canvas | 
    self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 11 | click | css=.menu-shape > .fl:nth-child(2) > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".menu-shape > .fl:nth-child(2) > img").click()
    # 12 | mouseDownAt | css=.upper-canvas | 515.3999938964844,188.39999389648438
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).move_by_offset(-200,100).click_and_hold().move_by_offset(100,100).perform()
    # 13 | mouseMoveAt | css=.upper-canvas | 515.3999938964844,188.39999389648438
    # element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    # actions = ActionChains(self.driver)
    # actions.move_to_element(element).perform()
    # 14 | mouseUpAt | css=.upper-canvas | 515.3999938964844,188.39999389648438
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.release().perform()
    # 15 | click | css=.upper-canvas | 
    self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 16 | click | css=.menu-shape > .fl:nth-child(3) > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".menu-shape > .fl:nth-child(3) > img").click()
    # 17 | mouseDownAt | css=.upper-canvas | 707.3999938964844,197.39999389648438
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).move_by_offset(-100,-100).click_and_hold().move_by_offset(100,100).perform()
    # 18 | mouseMoveAt | css=.upper-canvas | 707.3999938964844,197.39999389648438
    # element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    # actions = ActionChains(self.driver)
    # actions.move_to_element(element).perform()
    # 19 | mouseUpAt | css=.upper-canvas | 707.3999938964844,197.39999389648438
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 20 | click | css=.upper-canvas | 
    self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 21 | click | css=.menu-shape > .fl:nth-child(4) > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".menu-shape > .fl:nth-child(4) > img").click()
    # 22 | mouseDownAt | css=.upper-canvas | 915.3999938964844,229.39999389648438
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().move_by_offset(100,100).perform()
    # 23 | mouseMoveAt | css=.upper-canvas | 915.3999938964844,229.39999389648438
    # element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    # actions = ActionChains(self.driver)
    # actions.move_to_element(element).perform()
    # 24 | mouseUpAt | css=.upper-canvas | 915.3999938964844,229.39999389648438
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 25 | click | css=.upper-canvas | 
    self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 26 | click | css=.btn-basic-reset > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-basic-reset > img").click()
    # 27 | click | css=.btn-basic-undo > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-basic-undo > img").click()
    # 28 | click | css=.btn-basic-undo > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-basic-undo > img").click()
    # 29 | click | css=.btn-basic-redo > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-basic-redo > img").click()
    # 30 | click | css=.color-picker-shape > .fl:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".color-picker-shape > .fl:nth-child(1)").click()
    # 31 | click | css=.menu-shape > .fl:nth-child(4) > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".menu-shape > .fl:nth-child(4) > img").click()
    # 32 | mouseDownAt | css=.upper-canvas | 667.3999938964844,340.3999938964844
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).move_by_offset(100,100).click_and_hold().move_by_offset(50,50).perform()
    # 33 | mouseMoveAt | css=.upper-canvas | 667.3999938964844,340.3999938964844
    # element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    # actions = ActionChains(self.driver)
    # actions.move_to_element(element).perform()
    # 34 | mouseUpAt | css=.upper-canvas | 667.3999938964844,340.3999938964844
    element = self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 35 | click | css=.upper-canvas | 
    self.driver.find_element(By.CSS_SELECTOR, ".upper-canvas").click()
    # 36 | click | css=.btn-down-load | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-down-load").click()
    time.sleep(2)
    # 37 | close |  | 
    self.driver.close()
  
